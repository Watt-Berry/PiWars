// Generated by vtkWrapPythonInit in VTK/Wrapping
#include "vtkPythonUtil.h"
#include "vtkSystemIncludes.h"
#include <cstring>
// Handle compiler warning messages, etc.
#if defined( _MSC_VER ) && !defined(VTK_DISPLAY_WIN32_WARNINGS)
#pragma warning ( disable : 4706 )
#endif // Windows Warnings

extern "C" { void PyVTKAddFile_vtkCGNSFileSeriesReader(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkCGNSReader(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkIOCGNSReaderModule(PyObject *dict); }

static PyMethodDef PyvtkIOCGNSReader_Methods[] = {
{nullptr, nullptr, 0, nullptr}};

static PyModuleDef PyvtkIOCGNSReader_Module = {
  PyModuleDef_HEAD_INIT,
  "vtkIOCGNSReader", // m_name
  nullptr, // m_doc
  0, // m_size
  PyvtkIOCGNSReader_Methods, //m_methods
  nullptr, // m_reload
  nullptr, // m_traverse
  nullptr, // m_clear
  nullptr  // m_free
};
extern  "C" {VTK_ABI_EXPORT PyObject *real_initvtkIOCGNSReader(const char * /*unused*/); }

PyObject *real_initvtkIOCGNSReader(const char * /*unused*/)
{
  PyObject *m = PyModule_Create(&PyvtkIOCGNSReader_Module);
  PyObject *d = PyModule_GetDict(m);
  if (!d)
  {
    Py_FatalError("can't get dictionary for module vtkIOCGNSReader");
  }

  const char *depends[4] = {
    "vtkmodules.vtkCommonCore",
    "vtkmodules.vtkCommonDataModel",
    "vtkmodules.vtkCommonExecutionModel",
    "vtkmodules.vtkParallelCore",
  };

  for (int i = 0; i < 4; i++)
  {
    if (!vtkPythonUtil::ImportModule(depends[i], d))
    {
      Py_DECREF(m);
      return PyErr_Format(PyExc_ImportError,
        "Failed to load vtkIOCGNSReader: No module named %s",
        depends[i]);
    }
  }

  if (!vtkPythonUtil::IsInitialized())
  {
    Py_DECREF(m);
    return PyErr_Format(PyExc_ImportError,
      "Initialization failed for vtkIOCGNSReader, not compatible with %s",
      depends[0]);
  }

  PyVTKAddFile_vtkCGNSFileSeriesReader(d);
  PyVTKAddFile_vtkCGNSReader(d);
  PyVTKAddFile_vtkIOCGNSReaderModule(d);

  vtkPythonUtil::AddModule("vtkIOCGNSReader");

  return m;
}

