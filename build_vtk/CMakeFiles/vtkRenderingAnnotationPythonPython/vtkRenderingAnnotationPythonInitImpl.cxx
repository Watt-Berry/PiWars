// Generated by vtkWrapPythonInit in VTK/Wrapping
#include "vtkPythonUtil.h"
#include "vtkSystemIncludes.h"
#include <cstring>
// Handle compiler warning messages, etc.
#if defined( _MSC_VER ) && !defined(VTK_DISPLAY_WIN32_WARNINGS)
#pragma warning ( disable : 4706 )
#endif // Windows Warnings

extern "C" { void PyVTKAddFile_vtkAnnotatedCubeActor(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkArcPlotter(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkAxesActor(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkAxisActor(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkAxisActor2D(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkAxisFollower(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkBarChartActor(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkCaptionActor2D(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkConvexHull2D(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkCornerAnnotation(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkCubeAxesActor(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkCubeAxesActor2D(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkGraphAnnotationLayersFilter(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkLeaderActor2D(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkLegendBoxActor(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkLegendScaleActor(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkParallelCoordinatesActor(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkPieChartActor(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkPolarAxesActor(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkProp3DAxisFollower(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkScalarBarActor(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkSpiderPlotActor(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkXYPlotActor(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkRenderingAnnotationModule(PyObject *dict); }

static PyMethodDef PyvtkRenderingAnnotation_Methods[] = {
{nullptr, nullptr, 0, nullptr}};

static PyModuleDef PyvtkRenderingAnnotation_Module = {
  PyModuleDef_HEAD_INIT,
  "vtkRenderingAnnotation", // m_name
  nullptr, // m_doc
  0, // m_size
  PyvtkRenderingAnnotation_Methods, //m_methods
  nullptr, // m_reload
  nullptr, // m_traverse
  nullptr, // m_clear
  nullptr  // m_free
};
extern  "C" {VTK_ABI_EXPORT PyObject *real_initvtkRenderingAnnotation(const char * /*unused*/); }

PyObject *real_initvtkRenderingAnnotation(const char * /*unused*/)
{
  PyObject *m = PyModule_Create(&PyvtkRenderingAnnotation_Module);
  PyObject *d = PyModule_GetDict(m);
  if (!d)
  {
    Py_FatalError("can't get dictionary for module vtkRenderingAnnotation");
  }

  const char *depends[4] = {
    "vtkmodules.vtkCommonCore",
    "vtkmodules.vtkCommonDataModel",
    "vtkmodules.vtkCommonExecutionModel",
    "vtkmodules.vtkRenderingCore",
  };

  for (int i = 0; i < 4; i++)
  {
    if (!vtkPythonUtil::ImportModule(depends[i], d))
    {
      Py_DECREF(m);
      return PyErr_Format(PyExc_ImportError,
        "Failed to load vtkRenderingAnnotation: No module named %s",
        depends[i]);
    }
  }

  if (!vtkPythonUtil::IsInitialized())
  {
    Py_DECREF(m);
    return PyErr_Format(PyExc_ImportError,
      "Initialization failed for vtkRenderingAnnotation, not compatible with %s",
      depends[0]);
  }

  PyVTKAddFile_vtkAnnotatedCubeActor(d);
  PyVTKAddFile_vtkArcPlotter(d);
  PyVTKAddFile_vtkAxesActor(d);
  PyVTKAddFile_vtkAxisActor(d);
  PyVTKAddFile_vtkAxisActor2D(d);
  PyVTKAddFile_vtkAxisFollower(d);
  PyVTKAddFile_vtkBarChartActor(d);
  PyVTKAddFile_vtkCaptionActor2D(d);
  PyVTKAddFile_vtkConvexHull2D(d);
  PyVTKAddFile_vtkCornerAnnotation(d);
  PyVTKAddFile_vtkCubeAxesActor(d);
  PyVTKAddFile_vtkCubeAxesActor2D(d);
  PyVTKAddFile_vtkGraphAnnotationLayersFilter(d);
  PyVTKAddFile_vtkLeaderActor2D(d);
  PyVTKAddFile_vtkLegendBoxActor(d);
  PyVTKAddFile_vtkLegendScaleActor(d);
  PyVTKAddFile_vtkParallelCoordinatesActor(d);
  PyVTKAddFile_vtkPieChartActor(d);
  PyVTKAddFile_vtkPolarAxesActor(d);
  PyVTKAddFile_vtkProp3DAxisFollower(d);
  PyVTKAddFile_vtkScalarBarActor(d);
  PyVTKAddFile_vtkSpiderPlotActor(d);
  PyVTKAddFile_vtkXYPlotActor(d);
  PyVTKAddFile_vtkRenderingAnnotationModule(d);

  vtkPythonUtil::AddModule("vtkRenderingAnnotation");

  return m;
}

